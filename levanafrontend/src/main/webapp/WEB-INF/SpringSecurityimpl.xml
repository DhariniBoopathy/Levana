<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd">


	<security:http auto-config="true">
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/user/**" access="hasRole('ROLE_USER')"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		<security:form-login login-page="/Signin"
			default-target-url="/" login-processing-url="/perform_login"
			username-parameter="login_name" password-parameter="login_password"
			authentication-success-forward-url="/Signinsuccess"
			authentication-failure-url="/fSignin" />

		

		<security:csrf disabled="true" />
		<security:logout logout-success-url="/"
   logout-url="/Signout" invalidate-session="true" />
 
</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="mydatasource"
				users-by-username-query="select emailid,User_Password,Status as enabled from UserCred where emailid=?"
				authorities-by-username-query="select emailid,role from UserCred where emailid=?" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>